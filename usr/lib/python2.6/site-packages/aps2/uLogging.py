import logging

FATAL = 50
ERROR = 40
INFO = 20
DEBUG = 10
TRACE = 5

DEFAULT_FILE = '/var/log/httpd/ssl_error_log'
DEFAULT_LEVEL = DEBUG

logging.addLevelName(TRACE, "TRACE")


def trace(self, message, *args, **kws):
    if self.isEnabledFor(TRACE):
        self._log(TRACE, message, args, **kws)


def get_logger(log_file=DEFAULT_FILE, log_level=DEFAULT_LEVEL):
    global logger
    logger = logging.getLogger('myapp')
    if not logger.handlers:
        hdlr = logging.FileHandler(log_file)
        formatter = logging.Formatter('%(asctime)s %(levelname)s %(message)s')
        hdlr.setFormatter(formatter)
        logger.addHandler(hdlr)
    logger.setLevel(log_level)
    return logger


def set_log_file(self, log_file):
    hdlr = logging.FileHandler(log_file)
    formatter = logging.Formatter('%(asctime)s %(levelname)s %(message)s')
    hdlr.setFormatter(formatter)
    for hd in logger.handlers:  # remove all old handlers
        logger.removeHandler(hd)
    logger.addHandler(hdlr)

logging.Logger.trace = trace
logging.Logger.set_log_file = set_log_file


__all__ = ["FATAL", "ERROR", "INFO", "DEBUG", "TRACE"]



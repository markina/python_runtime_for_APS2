import urllib2

import simplejson as json
import ordereddict


import aps2.apsapi
import aps2.aps
import aps2.call_to_application

import aps2.uLogging

logger = aps2.uLogging.get_logger('/tmp/myapp.log', aps2.uLogging.DEBUG)


def call_provision(new_resource, properties, request_json):
    logger.info('POST --> provision()')
    properties_dictionary_new = {}

    for prop in properties:
        properties_dictionary_new[prop] = str(request_json[prop])

    new_resource.provision()

    for prop in properties:
        if properties_dictionary_new[prop] != getattr(new_resource, prop):
            break
    else:
        return ""
    for prop in properties:
        request_json[prop] = getattr(new_resource, prop)

    return json.dumps(request_json)


def call_retrieve(old_resource):
    logger.info('GET --> retrieve()')

    old_resource.retrieve()

    old_json = aps2.ServiceId.ServiceId.get_old_json()

    logger.info("after retrieve: NEW = " + old_resource.cloudpass)
    logger.info("after retrieve: NEW = " + old_resource.cloudadmin)
    logger.info("after retrieve: NEW = " + old_resource.apphost)

    properties = aps2.ServiceId.get_properties()

    for prop in properties:
        old_json[prop] = getattr(old_resource, prop)

    return json.dumps(old_json)


def call_configure(old_resource, new_resource, properties, request_json):
    logger.info('PUT --> configure()')
    properties_dictionary_new = {}

    for prop in properties:
        properties_dictionary_new[prop] = str(request_json[prop])

    old_resource.configure(new_resource)

    for prop in properties:
        if properties_dictionary_new[prop] != getattr(old_resource, prop):
            break
    else:
        return ""

    for prop in properties:
        request_json[prop] = getattr(old_resource, prop)

    return json.dumps(request_json)


def call_custom_function(old_resource, function):
    logger.info("FUNC --> " + function.main_name)

    for param in function.parameters:
        logger.info(param.to_string_without_json())

    method = getattr(old_resource, function.main_name)
    arguments = []
    for param in function.parameters:
        arguments.append(param.value)

    method(*arguments)

    return "ok"
